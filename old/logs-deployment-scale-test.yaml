apiVersion: apps/v1
kind: Deployment
metadata:
  name: looker
spec:
  replicas: 1
  minReadySeconds: 5
  selector:
    matchLabels:
      name: looker
  template:
    metadata:
      annotations:
        looker/scrape: "true" # TODO eliminate this if possible
      labels:
        name: looker
        app: looker
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  name: looker
              topologyKey: kubernetes.io/hostname
      containers:
        - image: opstrace/looker:962f275b-dev
          imagePullPolicy: IfNotPresent
          name: looker
          env:
            - name: MY_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MY_POD_SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
          command: ["looker"]
          args:
            [
              "https://loki-external.default.%NAME%.gcp.opstrace.io:8443",
              "--label",
              "node_name",
              "$(MY_NODE_NAME)",
              "--label",
              "pod_name",
              "$(MY_POD_NAME)",
              "--label",
              "pod_ip",
              "$(MY_POD_IP)",
              "--label",
              "pod_service_account",
              "$(MY_POD_NAMESPACE)",
              "--label",
              "pod_namespace",
              "$(MY_POD_SERVICE_ACCOUNT)",
              "--n-concurrent-streams",
              "8",
              "--stream-write-n-seconds-jitter",
              "30",
              "--max-concurrent-writes",
              "1",
              "--max-concurrent-reads",
              "1",
              "--log-time-increment-ns",
              "1000",
              "--n-entries-per-stream-fragment",
              "5000",
              "--stream-write-n-seconds",
              "60",
              "--change-streams-every-n-cycles",
              "100",
              "--n-cycles",
              "200",
              "--n-chars-per-msg",
              "200",
              "--compressability",
              "medium",
              "--http-server-port",
              "8900",
            ]
          ports:
            - containerPort: 8900
              hostPort: 8900
              name: metrics
              protocol: TCP
          resources:
            limits:
              cpu: 6
              memory: 6Gi
            requests:
              cpu: 500m
              memory: 2Gi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      serviceAccount: agent
      tolerations:
        - effect: NoSchedule
          operator: Exists
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
